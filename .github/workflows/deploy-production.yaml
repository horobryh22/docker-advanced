name: Deploy to Heroku

on:
  push:
    branches:
      - production # на момент когда в ветку production вливается какой-то код, мы делаем билд и деплоим наше приложение

env:
  APP_NAME: ${{ vars.HEROKU_APP_NAME }}

jobs:
  test: # здесь может быть джоба с критически важными тестами допустим
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # стягиваем репозиторий на машину

      - name: Set up Node.js
        uses: actions/setup-node@v2 # плагин устанавливает ноду на машину
        with:
          node-version: '20'

      - name: Install dependencies # устанавливаем зависимости
        run: npm install
        working-directory: backend/  # т.к. package-json не находится в основной директории репозитория

      - name: Run tests  # запускаем тесты
        run: npm test
        working-directory: backend/  # т.к. package-json не находится в основной директории репозитория

  build:
    runs-on: ubuntu-latest
    needs: test # указываем, что только после того, как пройдут тесты
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2 # стягиваем репозиторий на машину

      - name: Build, Push and Release a Docker container to Heroku
        uses: gonuit/heroku-docker-deploy@v1.3.3 # плагин деплоит приложение на хероку
        with:
          email: ${{ vars.HEROKU_EMAIL }}
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ env.APP_NAME }}
          dockerfile_directory: ./backend
          dockerfile_name: Dockerfile
          docker_options: "--no-cache"
          process_type: web
